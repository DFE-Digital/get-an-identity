@page "/sign-in/complete"
@using static OpenIddict.Abstractions.OpenIddictConstants
@model TeacherIdentity.AuthServer.Pages.SignIn.CompleteModel
@{
    ViewBag.Title = Model.FirstTimeSignInForEmail ?
        "You’ve created a DfE Identity account" :
        "You’ve signed in to your DfE Identity account";

    var responseMode = Model.ResponseMode!;
    var method = responseMode == ResponseModes.FormPost ? "post" : "get";
    var action = Model.RedirectUri!;

    if (Model.ResponseMode == ResponseModes.Fragment)
    {
        foreach (var (key, value) in Model.ResponseParameters!)
        {
            action += action.Contains("#") ? "&" : "#" +
                Uri.EscapeDataString(key) +
                "=" +
                Uri.EscapeDataString(value);
        }
    }

    ViewData.Add("Scope", Model.Scope);
}

@if (Model.TrnRequirementType == TrnRequirementType.Required && Model.TrnLookupStatus != TrnLookupStatus.Found)
{
    <vc:sign-in-complete
        trn-requirement-type="@Model.TrnRequirementType"
        trn-lookup-status="@Model.TrnLookupStatus"
        trn-lookup-support-ticket-created="@Model.TrnLookupSupportTicketCreated" />
}
else
{
    <form action="@action" method="@method" asp-antiforgery="false">
        @if (responseMode != ResponseModes.Fragment)
        {
            foreach (var (key, value) in Model.ResponseParameters!)
            {
                <input type="hidden" name="@key" value="@value">
            }
        }

        <vc:sign-in-complete
            trn-requirement-type="@Model.TrnRequirementType"
            trn-lookup-status="@Model.TrnLookupStatus"
            trn-lookup-support-ticket-created="@Model.TrnLookupSupportTicketCreated" />
    </form>
}
