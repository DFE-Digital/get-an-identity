@page "/sign-in/complete"
@using static OpenIddict.Abstractions.OpenIddictConstants
@model TeacherIdentity.AuthServer.Pages.SignIn.CompleteModel
@{
    ViewBag.Title = Model.FirstTimeSignInForEmail ?
        (await Component.InvokeAsync("ClientScopedPartial", new { viewName = "_TrnLookup.EndBookend.FirstTimeSignIn.{0}.Title" })).RenderToString() :
        "Your details";

    var responseMode = Model.ResponseMode!;
    var method = responseMode == ResponseModes.FormPost ? "post" : "get";
    var action = Model.RedirectUri!;

    if (Model.ResponseMode == ResponseModes.Fragment)
    {
        foreach (var (key, value) in Model.ResponseParameters!)
        {
            action += action.Contains("#") ? "&" : "#" +
                Uri.EscapeDataString(key) +
                "=" +
                Uri.EscapeDataString(value);
        }
    }

    ViewData.Add("Scope", Model.Scope);
}

<form action="@action" method="@method" asp-antiforgery="false">
    @if (responseMode != ResponseModes.Fragment)
    {
        foreach (var (key, value) in Model.ResponseParameters!)
        {
            <input type="hidden" name="@key" value="@value">
        }
    }

    @if (Model.FirstTimeSignInForEmail)
    {
        <govuk-panel class="app-panel--interruption" data-testid="first-time-user-content">
            <govuk-panel-title><span data-testid="first-time-user-postsigninmessage"></span>@ViewBag.Title</govuk-panel-title>

            <govuk-panel-body>
                @if (Model.GotTrn)
                {
                    <span data-testid="known-trn-content"></span>
                    <p>Thank you, we’ve finished checking our records.</p>

                    <p>If you need to come back to this service later you’ll only need to give us your email address <strong>(@Model.Email)</strong>.</p>
                }
                else
                {
                    <span data-testid="unknown-trn-content"></span>
                    <vc:client-scoped-partial view-name="_TrnLookup.EndBookend.FirstTimeSignInWithoutTrn.{0}.Content" />
                }

                <govuk-button type="submit" class="app-button--inverse govuk-!-margin-bottom-0">Continue</govuk-button>
            </govuk-panel-body>
        </govuk-panel>
    }
    else
    {
        <div class="govuk-grid-row" data-testid="known-user-content">
            <div class="govuk-grid-column-two-thirds-from-desktop">
                <h1 class="govuk-heading-xl">@ViewBag.Title</h1>

                <govuk-summary-list>
                    <govuk-summary-list-row>
                        <govuk-summary-list-row-key>Name</govuk-summary-list-row-key>
                        <govuk-summary-list-row-value>@Model.Name</govuk-summary-list-row-value>
                        <govuk-summary-list-row-actions>
                            <govuk-summary-list-row-action visually-hidden-text="name" href="@LinkGenerator.UpdateName(returnUrl: LinkGenerator.CompleteAuthorization(), cancelUrl: LinkGenerator.CompleteAuthorization())">Change</govuk-summary-list-row-action>
                        </govuk-summary-list-row-actions>
                    </govuk-summary-list-row>
                    <govuk-summary-list-row>
                        <govuk-summary-list-row-key>Email address</govuk-summary-list-row-key>
                        <govuk-summary-list-row-value class="empty-hyphens">@Html.ShyEmail(Model.Email!)</govuk-summary-list-row-value>
                        <govuk-summary-list-row-actions>
                            <govuk-summary-list-row-action visually-hidden-text="email" href="@LinkGenerator.UpdateEmail(returnUrl: LinkGenerator.CompleteAuthorization(), cancelUrl: LinkGenerator.CompleteAuthorization())">Change</govuk-summary-list-row-action>
                        </govuk-summary-list-row-actions>
                    </govuk-summary-list-row>
                </govuk-summary-list>

                <govuk-button type="submit">Continue</govuk-button>
            </div>
        </div>
    }
</form>
