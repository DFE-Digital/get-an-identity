@page "/connect/authorize"
@using static OpenIddict.Abstractions.OpenIddictConstants
@model TeacherIdentity.AuthServer.Pages.Authorization.AuthorizeModel
@{
    ViewBag.Title = Model.FirstTimeUser ? "Continue with your NPQ registration" : "You're signed in";

    async Task RenderForm(string? buttonClasses = null)
    {
        var parameters = from parameter in Model.ApplyAuthorizationResponseContext!.Response.GetParameters()
                         let values = (string?[]?)parameter.Value
                         where values is not null
                         from value in values
                         where !string.IsNullOrEmpty(value)
                         select (parameter.Key, Value: value);

        var responseMode = Model.ApplyAuthorizationResponseContext.ResponseMode;
        var method = responseMode == ResponseModes.FormPost ? "post" : "get";
        var action = Model.ApplyAuthorizationResponseContext!.RedirectUri!;

        if (responseMode == ResponseModes.Fragment)
        {
            foreach (var (key, value) in parameters)
            {
                action += action.Contains("#") ? "&" : "#" +
                  Uri.EscapeDataString(key) +
                  "=" +
                  Uri.EscapeDataString(value);
            }
        }

        <form action="@action" method="@method" asp-antiforgery="false">
          @if (responseMode != ResponseModes.Fragment)
          {
              foreach (var (key, value) in parameters)
              {
                  <input type="hidden" name="@key" value="@value">
              }
          }
          <govuk-button type="submit" class="@buttonClasses">Continue</govuk-button>
        </form>
    }
}

@if (Model.FirstTimeUser)
{
    <govuk-panel class="app-panel--interruption" data-testid="first-time-user-content">
      <govuk-panel-title>Continue with your NPQ registration</govuk-panel-title>

      <govuk-panel-body>
        @if (Model.GotTrn)
        {
            <p class="govuk-body" data-testid="known-trn-content">Thank you, weâ€™ve finished checking our records.</p>
        }
        else
        {
            <span data-testid="unknown-trn-content"></span>
            <h2 class="govuk-heading-m">You can continue without a match</h2>
            <p class="govuk-body">We will attempt to match your record again. If we cannot, someone might be in touch to ask for more information.</p>
        }

        <h2 class="govuk-heading-m">Next time</h2>
        <p class="govuk-body govuk-!-margin-bottom-6">Next time, you can skip these questions by signing in with your email address: <b>@Model.Email</b></p>

        @{
          await RenderForm("app-button--inverse govuk-!-margin-bottom-0");
        }
      </govuk-panel-body>
    </govuk-panel>
}
else
{
    <div class="govuk-grid-row" data-testid="known-user-content">
      <div class="govuk-grid-column-two-thirds-from-desktop">
        <h1 class="govuk-heading-xl">You're signed in</h1>

        <govuk-summary-list>
          <govuk-summary-list-row>
            <govuk-summary-list-row-key>Name</govuk-summary-list-row-key>
            <govuk-summary-list-row-value>@Model.Name</govuk-summary-list-row-value>
          </govuk-summary-list-row>
          <govuk-summary-list-row>
            <govuk-summary-list-row-key>TRN</govuk-summary-list-row-key>
            <govuk-summary-list-row-value>@Model.Trn</govuk-summary-list-row-value>
          </govuk-summary-list-row>
          <govuk-summary-list-row>
            <govuk-summary-list-row-key>Date of birth</govuk-summary-list-row-key>
            <govuk-summary-list-row-value>@(Model.DateOfBirth.ToString("d MMMM yyyy"))</govuk-summary-list-row-value>
          </govuk-summary-list-row>
        </govuk-summary-list>

        @{
          await RenderForm();
        }
        </div>
    </div>
}
