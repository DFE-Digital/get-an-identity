name: Deploy to Azure

inputs:
  environment_name:
    description: 'The name of the environment'
    required: true
  docker_image:
    description: 'Auth server Docker image to deploy to the app service'
    required: true
  authserver_tag:
    description: 'Test client Docker image to deploy to the app service'
    required: true
  testclient_tag:
    description: 'Test client Docker image to deploy to the app service'
    required: true
  azure_credentials:
    description: 'JSON object containing a service principal that can read from Azure Key Vault'
    required: true
  terraform_vars:
    description: 'Path to the tfvars file for the environment'
    required: true
  terraform_backend_vars:
    description: 'Path to the backend tfvars file for the environment'
    required: true

outputs:
  environment_url:
    description: 'The base URL for the deployed environment'
    value: ${{ steps.terraform.outputs.url }}


runs:
  using: composite

  steps:
    - name: Extract configuration from tfvars
      id: config
      run: |
        KEY_VAULT_NAME=$(jq -r '.key_vault_name' $TFVARS)
        PAAS_SPACE=$(jq -r '.paas_space' $TFVARS)
        if [ -z "$KEY_VAULT_NAME" ]; then
          echo "::error ::Failed to extract key_vault_name from $TFVARS"
          exit 1
        fi
        echo ::set-output name=key_vault_name::$KEY_VAULT_NAME
      shell: bash
      env:
        TFVARS: ${{ inputs.terraform_vars }}
      working-directory: terraform

    - uses: Azure/login@v1
      with:
        creds: ${{ inputs.azure_credentials }}

    - uses: Azure/get-keyvault-secrets@v1
      id: get_secrets
      with:
        keyvault: ${{ steps.config.outputs.key_vault_name }}
        secrets: 'TFSTATE-CONTAINER-ACCESS-KEY'

    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.10
        terraform_wrapper: false

    - name: Terraform
      id: terraform
      run: |
        make ci ${{ inputs.environment_name }} terraform-apply
        cd terraform && echo ::set-output name=url::$(terraform output -raw get_an_identity_fqdn)/
      env:
        ARM_ACCESS_KEY: ${{ steps.get_secrets.outputs.TFSTATE-CONTAINER-ACCESS-KEY }}
        TF_VAR_azure_sp_credentials_json: ${{ inputs.azure_credentials }}
        TF_VAR_docker_image: ${{ inputs.docker_image }}
        TF_VAR_authserver_tag: ${{ inputs.authserver_tag }}
        TF_VAR_testclient_tag: ${{ inputs.testclient_tag }}
      shell: bash
